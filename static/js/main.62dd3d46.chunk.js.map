{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getDate","Date","toUTCString","slice","Clock","state","date","dateTimerId","this","window","setInterval","setState","console","info","prevProps","clockName","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockNameTimerId","handleRightClick","event","preventDefault","handleLeftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAWMA,EAAU,kBAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAE9CC,EAAb,4MACEC,MAAQ,CACNC,KAAMN,KAFV,EAKEO,YAA6B,KAL/B,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,YAAcE,OAAOC,aAAY,WACpC,IAAMJ,EAAON,IAEb,EAAKW,SAAS,CAAEL,SAEhBM,QAAQC,KAAKP,KACZ,OAdP,gCAiBE,SAAmBQ,GACbA,EAAUC,YAAcP,KAAKQ,MAAMD,WACrCH,QAAQK,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDP,KAAKQ,MAAMD,cAnBzE,kCAuBE,WACMP,KAAKD,aACPE,OAAOS,cAAcV,KAAKD,eAzBhC,oBA6BE,WACE,IAAQQ,EAAcP,KAAKQ,MAAnBD,UACAT,EAASE,KAAKH,MAAdC,KAER,OACE,sBAAKa,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGb,WA1CX,GAA2Bc,IAAMC,WCTjC,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAQ,CACNU,UAAW,UACXY,UAAU,GAHd,EAMEC,iBAAkC,KANpC,EA0BEC,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKpB,SAAS,CAAEgB,UAAU,KA5B9B,EA+BEK,gBAAkB,WAChB,EAAKrB,SAAS,CAAEgB,UAAU,KAhC9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAe1B,KAAKqB,kBAC9CI,SAASC,iBAAiB,QAAS1B,KAAKwB,iBAExCxB,KAAKoB,iBAAmBnB,OAAOC,aAAY,WACzC,EAAKC,SAAS,CAAEI,UAAWO,QAC1B,QAdP,kCAiBE,WACEW,SAASE,oBAAoB,cAAe3B,KAAKqB,kBACjDI,SAASE,oBAAoB,QAAS3B,KAAKwB,iBAEvCxB,KAAKoB,kBACPnB,OAAOS,cAAcV,KAAKoB,oBAtBhC,oBAmCE,WACE,MAAgCpB,KAAKH,MAA7BU,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GACC,cAAC,EAAD,CAAOZ,UAAWA,WA3C5B,GAAyBK,IAAMC,WCZ/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.62dd3d46.chunk.js","sourcesContent":["import React from 'react';\n/* eslint-disable no-console */\n\ninterface Props {\n  clockName: string;\n}\n\ninterface State {\n  date: string;\n}\n\nconst getDate = () => new Date().toUTCString().slice(-12, -4);\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: getDate(),\n  };\n\n  dateTimerId: number | null = null;\n\n  componentDidMount() {\n    this.dateTimerId = window.setInterval(() => {\n      const date = getDate();\n\n      this.setState({ date });\n\n      console.info(date);\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.dateTimerId) {\n      window.clearInterval(this.dateTimerId);\n    }\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  clockNameTimerId: number | null = null;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n\n    this.clockNameTimerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n\n    if (this.clockNameTimerId) {\n      window.clearInterval(this.clockNameTimerId);\n    }\n  }\n\n  handleRightClick = (event: Event) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock clockName={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}